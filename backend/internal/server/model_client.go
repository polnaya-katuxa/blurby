/*
 * API for course project
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Client struct {
	Id string `json:"id"`

	Name string `json:"name"`

	Surname string `json:"surname"`

	Patronymic string `json:"patronymic"`

	Gender string `json:"gender"`

	BirthDate string `json:"birth_date"`

	RegistrationDate string `json:"registration_date"`

	Email string `json:"email"`

	Data map[string]string `json:"data,omitempty"`
}

// AssertClientRequired checks if the required fields are not zero-ed
func AssertClientRequired(obj Client) error {
	elements := map[string]interface{}{
		"id":                obj.Id,
		"name":              obj.Name,
		"surname":           obj.Surname,
		"patronymic":        obj.Patronymic,
		"gender":            obj.Gender,
		"birth_date":        obj.BirthDate,
		"registration_date": obj.RegistrationDate,
		"email":             obj.Email,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseClientRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Client (e.g. [][]Client), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseClientRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aClient, ok := obj.(Client)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertClientRequired(aClient)
	})
}
