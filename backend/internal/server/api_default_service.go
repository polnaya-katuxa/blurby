/*
 * API for course project
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// CreateAd - Создание рекламной рассылки
func (s *DefaultApiService) CreateAd(ctx context.Context, createAdRequest CreateAdRequest) (ImplResponse, error) {
	// TODO - update CreateAd with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, CreateAdResponse{}) or use other options such as http.Ok ...
	//return Response(201, CreateAdResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateAd method not implemented")
}

// CreateClient - Регистрация клиента системы
func (s *DefaultApiService) CreateClient(ctx context.Context, createClientRequest CreateClientRequest) (ImplResponse, error) {
	// TODO - update CreateClient with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, CreateClientResponse{}) or use other options such as http.Ok ...
	//return Response(201, CreateClientResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateClient method not implemented")
}

// CreateEvent - Добавление информации о событии
func (s *DefaultApiService) CreateEvent(ctx context.Context, createEventRequest CreateEventRequest) (ImplResponse, error) {
	// TODO - update CreateEvent with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(202, CreateEventResponse{}) or use other options such as http.Ok ...
	//return Response(202, CreateEventResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateEvent method not implemented")
}

// CreateEventType - Добавление типа события
func (s *DefaultApiService) CreateEventType(ctx context.Context, userToken string, createEventTypeRequest CreateEventTypeRequest) (ImplResponse, error) {
	// TODO - update CreateEventType with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, CreateEventTypeResponse{}) or use other options such as http.Ok ...
	//return Response(201, CreateEventTypeResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateEventType method not implemented")
}

// DeleteClient - Удаление клиента из системы
func (s *DefaultApiService) DeleteClient(ctx context.Context, deleteClientRequest DeleteClientRequest) (ImplResponse, error) {
	// TODO - update DeleteClient with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, DeleteClientResponse{}) or use other options such as http.Ok ...
	//return Response(200, DeleteClientResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteClient method not implemented")
}

// DeleteUser - Удаление пользователя
func (s *DefaultApiService) DeleteUser(ctx context.Context, deleteUserRequest DeleteUserRequest) (ImplResponse, error) {
	// TODO - update DeleteUser with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, DeleteUserResponse{}) or use other options such as http.Ok ...
	//return Response(200, DeleteUserResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteUser method not implemented")
}

// Filter - Фильтрация событий
func (s *DefaultApiService) Filter(ctx context.Context, filterRequest FilterRequest) (ImplResponse, error) {
	// TODO - update Filter with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, FilterResponse{}) or use other options such as http.Ok ...
	//return Response(200, FilterResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Filter method not implemented")
}

// GetAds - Получение рекламных рассылок
func (s *DefaultApiService) GetAds(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAds with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(202, GetAdsResponse{}) or use other options such as http.Ok ...
	//return Response(202, GetAdsResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAds method not implemented")
}

// GetClient - Получение информации о клиенте системы
func (s *DefaultApiService) GetClient(ctx context.Context, getClientRequest GetClientRequest) (ImplResponse, error) {
	// TODO - update GetClient with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetClientResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetClientResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetClient method not implemented")
}

// GetClientStats - Получение статистики системы
func (s *DefaultApiService) GetClientStats(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetClientStats with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetClientStatsResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetClientStatsResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetClientStats method not implemented")
}

// GetClients - Получение информации о всех клиентах системы
func (s *DefaultApiService) GetClients(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetClients with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetClientsResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetClientsResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetClients method not implemented")
}

// GetEventTypes - Получение типов событий
func (s *DefaultApiService) GetEventTypes(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetEventTypes with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(202, GetEventTypesResponse{}) or use other options such as http.Ok ...
	//return Response(202, GetEventTypesResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetEventTypes method not implemented")
}

// GetUser - Получение информации о пользователе по логину
func (s *DefaultApiService) GetUser(ctx context.Context, getUserRequest GetUserRequest) (ImplResponse, error) {
	// TODO - update GetUser with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetUserResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetUserResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUser method not implemented")
}

// GetUserByID - Получение информации о пользователе по ID
func (s *DefaultApiService) GetUserByID(ctx context.Context, getUserByIdRequest GetUserByIdRequest) (ImplResponse, error) {
	// TODO - update GetUserByID with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetUserResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetUserResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUserByID method not implemented")
}

// GetUsers - Получение информации о всех пользователях системы
func (s *DefaultApiService) GetUsers(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetUsers with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetUsersResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetUsersResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUsers method not implemented")
}

// GrantUserAdmin - Выдача пользователю прав администратора
func (s *DefaultApiService) GrantUserAdmin(ctx context.Context, grantAdminRequest GrantAdminRequest) (ImplResponse, error) {
	// TODO - update GrantUserAdmin with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GrantAdminResponse{}) or use other options such as http.Ok ...
	//return Response(200, GrantAdminResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GrantUserAdmin method not implemented")
}

// Login - Вход пользователя в систему
func (s *DefaultApiService) Login(ctx context.Context, authRequest AuthRequest) (ImplResponse, error) {
	// TODO - update Login with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, AuthResponse{}) or use other options such as http.Ok ...
	//return Response(200, AuthResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Login method not implemented")
}

// Register - Регистрация пользователя
func (s *DefaultApiService) Register(ctx context.Context, authRequest AuthRequest) (ImplResponse, error) {
	// TODO - update Register with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, AuthResponse{}) or use other options such as http.Ok ...
	//return Response(201, AuthResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Register method not implemented")
}

// UserInfo - Получение информации о текущем пользователе
func (s *DefaultApiService) UserInfo(ctx context.Context) (ImplResponse, error) {
	// TODO - update UserInfo with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, UserInfoResponse{}) or use other options such as http.Ok ...
	//return Response(200, UserInfoResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, ErrorResponse{}) or use other options such as http.Ok ...
	//return Response(0, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UserInfo method not implemented")
}
