/*
 * API for course project
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type EventType struct {
	Id string `json:"id,omitempty"`

	Name string `json:"name"`

	Alias string `json:"alias"`
}

// AssertEventTypeRequired checks if the required fields are not zero-ed
func AssertEventTypeRequired(obj EventType) error {
	elements := map[string]interface{}{
		"name":  obj.Name,
		"alias": obj.Alias,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseEventTypeRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of EventType (e.g. [][]EventType), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseEventTypeRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aEventType, ok := obj.(EventType)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertEventTypeRequired(aEventType)
	})
}
