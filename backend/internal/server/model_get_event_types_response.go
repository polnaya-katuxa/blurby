/*
 * API for course project
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GetEventTypesResponse struct {
	EventTypes []EventType `json:"event_types"`
}

// AssertGetEventTypesResponseRequired checks if the required fields are not zero-ed
func AssertGetEventTypesResponseRequired(obj GetEventTypesResponse) error {
	elements := map[string]interface{}{
		"event_types": obj.EventTypes,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.EventTypes {
		if err := AssertEventTypeRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseGetEventTypesResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GetEventTypesResponse (e.g. [][]GetEventTypesResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGetEventTypesResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGetEventTypesResponse, ok := obj.(GetEventTypesResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGetEventTypesResponseRequired(aGetEventTypesResponse)
	})
}
