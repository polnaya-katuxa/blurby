/*
 * API for course project
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Event struct {
	ClientID string `json:"clientID"`

	Alias string `json:"alias"`
}

// AssertEventRequired checks if the required fields are not zero-ed
func AssertEventRequired(obj Event) error {
	elements := map[string]interface{}{
		"clientID": obj.ClientID,
		"alias":    obj.Alias,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseEventRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Event (e.g. [][]Event), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseEventRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aEvent, ok := obj.(Event)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertEventRequired(aEvent)
	})
}
