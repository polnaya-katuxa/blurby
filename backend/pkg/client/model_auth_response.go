/*
API for course project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthResponse{}

// AuthResponse struct for AuthResponse
type AuthResponse struct {
	Token string `json:"token"`
}

// NewAuthResponse instantiates a new AuthResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthResponse(token string) *AuthResponse {
	this := AuthResponse{}
	this.Token = token
	return &this
}

// NewAuthResponseWithDefaults instantiates a new AuthResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthResponseWithDefaults() *AuthResponse {
	this := AuthResponse{}
	return &this
}

// GetToken returns the Token field value
func (o *AuthResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *AuthResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *AuthResponse) SetToken(v string) {
	o.Token = v
}

func (o AuthResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["token"] = o.Token
	return toSerialize, nil
}

type NullableAuthResponse struct {
	value *AuthResponse
	isSet bool
}

func (v NullableAuthResponse) Get() *AuthResponse {
	return v.value
}

func (v *NullableAuthResponse) Set(val *AuthResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthResponse(val *AuthResponse) *NullableAuthResponse {
	return &NullableAuthResponse{value: val, isSet: true}
}

func (v NullableAuthResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
