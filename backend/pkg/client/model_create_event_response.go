/*
API for course project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateEventResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEventResponse{}

// CreateEventResponse struct for CreateEventResponse
type CreateEventResponse struct {
	Passed bool `json:"passed"`
}

// NewCreateEventResponse instantiates a new CreateEventResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEventResponse(passed bool) *CreateEventResponse {
	this := CreateEventResponse{}
	this.Passed = passed
	return &this
}

// NewCreateEventResponseWithDefaults instantiates a new CreateEventResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEventResponseWithDefaults() *CreateEventResponse {
	this := CreateEventResponse{}
	return &this
}

// GetPassed returns the Passed field value
func (o *CreateEventResponse) GetPassed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Passed
}

// GetPassedOk returns a tuple with the Passed field value
// and a boolean to check if the value has been set.
func (o *CreateEventResponse) GetPassedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Passed, true
}

// SetPassed sets field value
func (o *CreateEventResponse) SetPassed(v bool) {
	o.Passed = v
}

func (o CreateEventResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEventResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["passed"] = o.Passed
	return toSerialize, nil
}

type NullableCreateEventResponse struct {
	value *CreateEventResponse
	isSet bool
}

func (v NullableCreateEventResponse) Get() *CreateEventResponse {
	return v.value
}

func (v *NullableCreateEventResponse) Set(val *CreateEventResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEventResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEventResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEventResponse(val *CreateEventResponse) *NullableCreateEventResponse {
	return &NullableCreateEventResponse{value: val, isSet: true}
}

func (v NullableCreateEventResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEventResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
