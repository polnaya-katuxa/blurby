/*
API for course project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetClientResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetClientResponse{}

// GetClientResponse struct for GetClientResponse
type GetClientResponse struct {
	Client Client `json:"client"`
}

// NewGetClientResponse instantiates a new GetClientResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetClientResponse(client Client) *GetClientResponse {
	this := GetClientResponse{}
	this.Client = client
	return &this
}

// NewGetClientResponseWithDefaults instantiates a new GetClientResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetClientResponseWithDefaults() *GetClientResponse {
	this := GetClientResponse{}
	return &this
}

// GetClient returns the Client field value
func (o *GetClientResponse) GetClient() Client {
	if o == nil {
		var ret Client
		return ret
	}

	return o.Client
}

// GetClientOk returns a tuple with the Client field value
// and a boolean to check if the value has been set.
func (o *GetClientResponse) GetClientOk() (*Client, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Client, true
}

// SetClient sets field value
func (o *GetClientResponse) SetClient(v Client) {
	o.Client = v
}

func (o GetClientResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetClientResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client"] = o.Client
	return toSerialize, nil
}

type NullableGetClientResponse struct {
	value *GetClientResponse
	isSet bool
}

func (v NullableGetClientResponse) Get() *GetClientResponse {
	return v.value
}

func (v *NullableGetClientResponse) Set(val *GetClientResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetClientResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetClientResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetClientResponse(val *GetClientResponse) *NullableGetClientResponse {
	return &NullableGetClientResponse{value: val, isSet: true}
}

func (v NullableGetClientResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetClientResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
