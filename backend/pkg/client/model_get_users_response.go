/*
API for course project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetUsersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUsersResponse{}

// GetUsersResponse struct for GetUsersResponse
type GetUsersResponse struct {
	Users []User `json:"users"`
}

// NewGetUsersResponse instantiates a new GetUsersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUsersResponse(users []User) *GetUsersResponse {
	this := GetUsersResponse{}
	this.Users = users
	return &this
}

// NewGetUsersResponseWithDefaults instantiates a new GetUsersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUsersResponseWithDefaults() *GetUsersResponse {
	this := GetUsersResponse{}
	return &this
}

// GetUsers returns the Users field value
func (o *GetUsersResponse) GetUsers() []User {
	if o == nil {
		var ret []User
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *GetUsersResponse) GetUsersOk() ([]User, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *GetUsersResponse) SetUsers(v []User) {
	o.Users = v
}

func (o GetUsersResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUsersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["users"] = o.Users
	return toSerialize, nil
}

type NullableGetUsersResponse struct {
	value *GetUsersResponse
	isSet bool
}

func (v NullableGetUsersResponse) Get() *GetUsersResponse {
	return v.value
}

func (v *NullableGetUsersResponse) Set(val *GetUsersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUsersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUsersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUsersResponse(val *GetUsersResponse) *NullableGetUsersResponse {
	return &NullableGetUsersResponse{value: val, isSet: true}
}

func (v NullableGetUsersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUsersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
