/*
API for course project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateEventRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEventRequest{}

// CreateEventRequest struct for CreateEventRequest
type CreateEventRequest struct {
	Event Event `json:"event"`
}

// NewCreateEventRequest instantiates a new CreateEventRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEventRequest(event Event) *CreateEventRequest {
	this := CreateEventRequest{}
	this.Event = event
	return &this
}

// NewCreateEventRequestWithDefaults instantiates a new CreateEventRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEventRequestWithDefaults() *CreateEventRequest {
	this := CreateEventRequest{}
	return &this
}

// GetEvent returns the Event field value
func (o *CreateEventRequest) GetEvent() Event {
	if o == nil {
		var ret Event
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *CreateEventRequest) GetEventOk() (*Event, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *CreateEventRequest) SetEvent(v Event) {
	o.Event = v
}

func (o CreateEventRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEventRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["event"] = o.Event
	return toSerialize, nil
}

type NullableCreateEventRequest struct {
	value *CreateEventRequest
	isSet bool
}

func (v NullableCreateEventRequest) Get() *CreateEventRequest {
	return v.value
}

func (v *NullableCreateEventRequest) Set(val *CreateEventRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEventRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEventRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEventRequest(val *CreateEventRequest) *NullableCreateEventRequest {
	return &NullableCreateEventRequest{value: val, isSet: true}
}

func (v NullableCreateEventRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEventRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
