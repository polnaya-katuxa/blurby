/*
API for course project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetAdsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAdsResponse{}

// GetAdsResponse struct for GetAdsResponse
type GetAdsResponse struct {
	Ads []Ad `json:"ads"`
}

// NewGetAdsResponse instantiates a new GetAdsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAdsResponse(ads []Ad) *GetAdsResponse {
	this := GetAdsResponse{}
	this.Ads = ads
	return &this
}

// NewGetAdsResponseWithDefaults instantiates a new GetAdsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAdsResponseWithDefaults() *GetAdsResponse {
	this := GetAdsResponse{}
	return &this
}

// GetAds returns the Ads field value
func (o *GetAdsResponse) GetAds() []Ad {
	if o == nil {
		var ret []Ad
		return ret
	}

	return o.Ads
}

// GetAdsOk returns a tuple with the Ads field value
// and a boolean to check if the value has been set.
func (o *GetAdsResponse) GetAdsOk() ([]Ad, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ads, true
}

// SetAds sets field value
func (o *GetAdsResponse) SetAds(v []Ad) {
	o.Ads = v
}

func (o GetAdsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAdsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ads"] = o.Ads
	return toSerialize, nil
}

type NullableGetAdsResponse struct {
	value *GetAdsResponse
	isSet bool
}

func (v NullableGetAdsResponse) Get() *GetAdsResponse {
	return v.value
}

func (v *NullableGetAdsResponse) Set(val *GetAdsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAdsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAdsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAdsResponse(val *GetAdsResponse) *NullableGetAdsResponse {
	return &NullableGetAdsResponse{value: val, isSet: true}
}

func (v NullableGetAdsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAdsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
