/*
API for course project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClientStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientStats{}

// ClientStats struct for ClientStats
type ClientStats struct {
	Num    *int32 `json:"num,omitempty"`
	AvgAge *int32 `json:"avgAge,omitempty"`
}

// NewClientStats instantiates a new ClientStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientStats() *ClientStats {
	this := ClientStats{}
	return &this
}

// NewClientStatsWithDefaults instantiates a new ClientStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientStatsWithDefaults() *ClientStats {
	this := ClientStats{}
	return &this
}

// GetNum returns the Num field value if set, zero value otherwise.
func (o *ClientStats) GetNum() int32 {
	if o == nil || IsNil(o.Num) {
		var ret int32
		return ret
	}
	return *o.Num
}

// GetNumOk returns a tuple with the Num field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientStats) GetNumOk() (*int32, bool) {
	if o == nil || IsNil(o.Num) {
		return nil, false
	}
	return o.Num, true
}

// HasNum returns a boolean if a field has been set.
func (o *ClientStats) HasNum() bool {
	if o != nil && !IsNil(o.Num) {
		return true
	}

	return false
}

// SetNum gets a reference to the given int32 and assigns it to the Num field.
func (o *ClientStats) SetNum(v int32) {
	o.Num = &v
}

// GetAvgAge returns the AvgAge field value if set, zero value otherwise.
func (o *ClientStats) GetAvgAge() int32 {
	if o == nil || IsNil(o.AvgAge) {
		var ret int32
		return ret
	}
	return *o.AvgAge
}

// GetAvgAgeOk returns a tuple with the AvgAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientStats) GetAvgAgeOk() (*int32, bool) {
	if o == nil || IsNil(o.AvgAge) {
		return nil, false
	}
	return o.AvgAge, true
}

// HasAvgAge returns a boolean if a field has been set.
func (o *ClientStats) HasAvgAge() bool {
	if o != nil && !IsNil(o.AvgAge) {
		return true
	}

	return false
}

// SetAvgAge gets a reference to the given int32 and assigns it to the AvgAge field.
func (o *ClientStats) SetAvgAge(v int32) {
	o.AvgAge = &v
}

func (o ClientStats) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Num) {
		toSerialize["num"] = o.Num
	}
	if !IsNil(o.AvgAge) {
		toSerialize["avgAge"] = o.AvgAge
	}
	return toSerialize, nil
}

type NullableClientStats struct {
	value *ClientStats
	isSet bool
}

func (v NullableClientStats) Get() *ClientStats {
	return v.value
}

func (v *NullableClientStats) Set(val *ClientStats) {
	v.value = val
	v.isSet = true
}

func (v NullableClientStats) IsSet() bool {
	return v.isSet
}

func (v *NullableClientStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientStats(val *ClientStats) *NullableClientStats {
	return &NullableClientStats{value: val, isSet: true}
}

func (v NullableClientStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
