/*
API for course project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Schedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Schedule{}

// Schedule struct for Schedule
type Schedule struct {
	Periodic *bool   `json:"periodic,omitempty"`
	Finished *bool   `json:"finished,omitempty"`
	NextTime *string `json:"nextTime,omitempty"`
	Span     string  `json:"span"`
}

// NewSchedule instantiates a new Schedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedule(span string) *Schedule {
	this := Schedule{}
	this.Span = span
	return &this
}

// NewScheduleWithDefaults instantiates a new Schedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleWithDefaults() *Schedule {
	this := Schedule{}
	return &this
}

// GetPeriodic returns the Periodic field value if set, zero value otherwise.
func (o *Schedule) GetPeriodic() bool {
	if o == nil || IsNil(o.Periodic) {
		var ret bool
		return ret
	}
	return *o.Periodic
}

// GetPeriodicOk returns a tuple with the Periodic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Schedule) GetPeriodicOk() (*bool, bool) {
	if o == nil || IsNil(o.Periodic) {
		return nil, false
	}
	return o.Periodic, true
}

// HasPeriodic returns a boolean if a field has been set.
func (o *Schedule) HasPeriodic() bool {
	if o != nil && !IsNil(o.Periodic) {
		return true
	}

	return false
}

// SetPeriodic gets a reference to the given bool and assigns it to the Periodic field.
func (o *Schedule) SetPeriodic(v bool) {
	o.Periodic = &v
}

// GetFinished returns the Finished field value if set, zero value otherwise.
func (o *Schedule) GetFinished() bool {
	if o == nil || IsNil(o.Finished) {
		var ret bool
		return ret
	}
	return *o.Finished
}

// GetFinishedOk returns a tuple with the Finished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Schedule) GetFinishedOk() (*bool, bool) {
	if o == nil || IsNil(o.Finished) {
		return nil, false
	}
	return o.Finished, true
}

// HasFinished returns a boolean if a field has been set.
func (o *Schedule) HasFinished() bool {
	if o != nil && !IsNil(o.Finished) {
		return true
	}

	return false
}

// SetFinished gets a reference to the given bool and assigns it to the Finished field.
func (o *Schedule) SetFinished(v bool) {
	o.Finished = &v
}

// GetNextTime returns the NextTime field value if set, zero value otherwise.
func (o *Schedule) GetNextTime() string {
	if o == nil || IsNil(o.NextTime) {
		var ret string
		return ret
	}
	return *o.NextTime
}

// GetNextTimeOk returns a tuple with the NextTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Schedule) GetNextTimeOk() (*string, bool) {
	if o == nil || IsNil(o.NextTime) {
		return nil, false
	}
	return o.NextTime, true
}

// HasNextTime returns a boolean if a field has been set.
func (o *Schedule) HasNextTime() bool {
	if o != nil && !IsNil(o.NextTime) {
		return true
	}

	return false
}

// SetNextTime gets a reference to the given string and assigns it to the NextTime field.
func (o *Schedule) SetNextTime(v string) {
	o.NextTime = &v
}

// GetSpan returns the Span field value
func (o *Schedule) GetSpan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Span
}

// GetSpanOk returns a tuple with the Span field value
// and a boolean to check if the value has been set.
func (o *Schedule) GetSpanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Span, true
}

// SetSpan sets field value
func (o *Schedule) SetSpan(v string) {
	o.Span = v
}

func (o Schedule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Schedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Periodic) {
		toSerialize["periodic"] = o.Periodic
	}
	if !IsNil(o.Finished) {
		toSerialize["finished"] = o.Finished
	}
	if !IsNil(o.NextTime) {
		toSerialize["nextTime"] = o.NextTime
	}
	toSerialize["span"] = o.Span
	return toSerialize, nil
}

type NullableSchedule struct {
	value *Schedule
	isSet bool
}

func (v NullableSchedule) Get() *Schedule {
	return v.value
}

func (v *NullableSchedule) Set(val *Schedule) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedule(val *Schedule) *NullableSchedule {
	return &NullableSchedule{value: val, isSet: true}
}

func (v NullableSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
