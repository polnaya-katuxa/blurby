/*
API for course project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserResponse{}

// GetUserResponse struct for GetUserResponse
type GetUserResponse struct {
	User User `json:"user"`
}

// NewGetUserResponse instantiates a new GetUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserResponse(user User) *GetUserResponse {
	this := GetUserResponse{}
	this.User = user
	return &this
}

// NewGetUserResponseWithDefaults instantiates a new GetUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserResponseWithDefaults() *GetUserResponse {
	this := GetUserResponse{}
	return &this
}

// GetUser returns the User field value
func (o *GetUserResponse) GetUser() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetUserOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *GetUserResponse) SetUser(v User) {
	o.User = v
}

func (o GetUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user"] = o.User
	return toSerialize, nil
}

type NullableGetUserResponse struct {
	value *GetUserResponse
	isSet bool
}

func (v NullableGetUserResponse) Get() *GetUserResponse {
	return v.value
}

func (v *NullableGetUserResponse) Set(val *GetUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserResponse(val *GetUserResponse) *NullableGetUserResponse {
	return &NullableGetUserResponse{value: val, isSet: true}
}

func (v NullableGetUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
