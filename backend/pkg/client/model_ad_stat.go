/*
API for course project

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdStat{}

// AdStat struct for AdStat
type AdStat struct {
	Num  int32  `json:"num"`
	Date string `json:"date"`
}

// NewAdStat instantiates a new AdStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdStat(num int32, date string) *AdStat {
	this := AdStat{}
	this.Num = num
	this.Date = date
	return &this
}

// NewAdStatWithDefaults instantiates a new AdStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdStatWithDefaults() *AdStat {
	this := AdStat{}
	return &this
}

// GetNum returns the Num field value
func (o *AdStat) GetNum() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Num
}

// GetNumOk returns a tuple with the Num field value
// and a boolean to check if the value has been set.
func (o *AdStat) GetNumOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Num, true
}

// SetNum sets field value
func (o *AdStat) SetNum(v int32) {
	o.Num = v
}

// GetDate returns the Date field value
func (o *AdStat) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *AdStat) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *AdStat) SetDate(v string) {
	o.Date = v
}

func (o AdStat) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["num"] = o.Num
	toSerialize["date"] = o.Date
	return toSerialize, nil
}

type NullableAdStat struct {
	value *AdStat
	isSet bool
}

func (v NullableAdStat) Get() *AdStat {
	return v.value
}

func (v *NullableAdStat) Set(val *AdStat) {
	v.value = val
	v.isSet = true
}

func (v NullableAdStat) IsSet() bool {
	return v.isSet
}

func (v *NullableAdStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdStat(val *AdStat) *NullableAdStat {
	return &NullableAdStat{value: val, isSet: true}
}

func (v NullableAdStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
